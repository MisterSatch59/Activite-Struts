<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">
<struts>
	<!-- Package de base -->
	<package name="base" abstract="true" extends="struts-default">
		<interceptors>
            <interceptor name="auth" class="org.example.palabres.webapp.interceptor.AuthInterceptor" />

            <interceptor-stack name="applicationDefaultStack">
                <interceptor-ref name="defaultStack">
                    <param name="exception.logEnabled">true</param>
                    <param name="exception.logLevel">ERROR</param>
                    <param name="exception.logCategory">org.example.palabres.webapp</param>
                </interceptor-ref>
            </interceptor-stack>

            <interceptor-stack name="authenticatedStack">
                <interceptor-ref name="auth" />
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="defaultStack" />
            </interceptor-stack>
        </interceptors>
        
        <default-interceptor-ref name="applicationDefaultStack" />

        <!-- Results globaux -->
        <global-results>
            <result name="error">/jsp/error.jsp</result>
            <result name="error-forbidden" type="httpheader">
                <param name="error">403</param>
            </result>
            
            <result name="Exception" type="httpheader">
                <param name="error">500</param>
                <param name="parse">true</param>
                <param name="errorMessage">%{exception}</param>
            </result>
            <result name="TechnicalException" type="httpheader">
                <param name="error">500</param>
                <param name="parse">true</param>
                <param name="errorMessage">Erreur technique - %{exception.message}</param>
            </result>
            <result name="NotFoundException" type="httpheader">
                <param name="error">404</param>
                <param name="parse">true</param>
                <param name="errorMessage">Objet introuvable - %{exception.message}</param>
            </result>
        </global-results>
        
        <global-exception-mappings>
            <exception-mapping exception="java.lang.Exception" result="Exception" />
            <exception-mapping exception="org.example.palabres.model.exception.TechnicalException"
                               result="TechnicalException" />
            <exception-mapping exception="org.example.palabres.model.exception.NotFoundException"
                               result="NotFoundException" />
        </global-exception-mappings>
	</package>
	
	<!-- Package Public -->
	<package name="public" extends="base">
		<!-- Action par défaut -->
		<default-action-ref name="index" />

		<!-- Action "index" -->
		<action name="index">
			<result>index.jsp</result>
		</action>
		
		<!-- Actions Login/Logout -->
		<action name="login" class="org.example.palabres.webapp.action.LoginAction" method="doLogin">
			<result name="input">/WEB-INF/jsp/login.jsp</result>
			<result name="success" type="redirectAction">listChannel</result>
		</action>
		<action name="logout" class="org.example.palabres.webapp.action.LoginAction" method="doLogout">
			<result type="redirectAction">index</result>
		</action>
	</package>

	<!-- Package Privé -->
	<package name="private" extends="base">
		 <default-interceptor-ref name="authenticatedStack" />
	
		<!-- Action listant les channels -->
		<action name="listChannel" class="org.example.palabres.webapp.action.ChannelAction" method="doList">
			<result>/WEB-INF/jsp/channel/list.jsp</result>
		</action>
	
		<!-- Action créant un channel -->
		<action name="createChannel" class="org.example.palabres.webapp.action.ChannelAction" method="doCreate">
			<result name="input">/WEB-INF/jsp/channel/creation.jsp</result>
			<result name="success" type="redirectAction">
				<param name="actionName">messagesChannel</param>
				<param name="channelName">${channelName}</param>
			</result>
		</action>
	
		<!-- Action affichant le liste des messages d'un Channel  - Non utilisée pour l'activité 2 car remplacé par action AJAX -->
		<action name="messagesChannel" class="org.example.palabres.webapp.action.AfficherChannelAction" method="doListMessage">
			<result>/WEB-INF/jsp/channel/messages.jsp</result>
		</action>

		
	</package>

    <!-- ===== Package pour les actions AJAX ===== -->
    <package name="ajax" extends="base, json-default">

        <!-- Action renvoyant la liste des Messages -->
        <action name="ajax_getListMessages"
                class="org.example.palabres.webapp.action.AfficherChannelAction"
                method="doAjaxListMessage">
            <result name="success" type="json">
                <param name="root">listMessage</param>
            </result>
        </action>
        
        <!-- Action envoyant un nouveau Message -->
        <action name="ajax_newMessage"
                class="org.example.palabres.webapp.action.AfficherChannelAction"
                method="doAjaxEnvoyerMessage">
            <result name="success" type="json">
                <param name="root">listMessage</param>
            </result>
        </action>
    </package>

</struts>
